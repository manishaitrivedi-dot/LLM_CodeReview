name: Code Review
on:
  pull_request:
    types: [opened, synchronize, reopened]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
  
permissions:
  contents: read
  issues: write
  pull-requests: write
jobs:
  review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: pip install snowflake-connector-python tiktoken whatthepatch snowflake-snowpark-python snowflake-ml-python pandas requests
      
      - name: Create output directory
        run: mkdir -p reviews
      
      - name: Debug environment
        run: |
          echo "Repository: ${{ github.repository }}"
          echo "PR Number: ${{ github.event.pull_request.number }}"
          echo "Head SHA: ${{ github.event.pull_request.head.sha }}"
          echo "Files in 3_big_py_files directory:"
          ls -la 3_big_py_files/ || echo "No test directory found"
          find . -name "*.py" -o -name "*.sql" | grep -E "(3_big_py_files/|scripts/)" || echo "No Python/SQL files found"
      
      - name: Run code review analysis
        run: python scripts/main.py 3_big_py_files reviews ${{ github.event.pull_request.number }} ${{ github.event.pull_request.head.sha }}
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
          SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
      
      - name: Upload review outputs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: review-outputs
          path: reviews/
      
      - name: Post review comments
        run: python scripts/inline_comment.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_PR_NUMBER: ${{ github.event.pull_request.number }}
        continue-on-error: true
