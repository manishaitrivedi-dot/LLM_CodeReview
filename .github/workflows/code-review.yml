name: Code Review
on:
  pull_request:
    types: [opened, synchronize, reopened]
  
permissions:
  contents: read
  issues: write
  pull-requests: write
  repository-projects: read

jobs:
  review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.pull_request.number != null
    
    steps:
      - uses: actions/checkout@v4
        with:
          # This checks out the merge commit (PR branch + main)
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0  # Fetch full history
      
      # Optional: Also fetch the base branch to have access to both
      - name: Fetch base branch
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }}:${{ github.event.pull_request.base.ref }}
      
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: pip install snowflake-connector-python tiktoken whatthepatch snowflake-snowpark-python snowflake-ml-python pandas requests
      
      - name: Create output directory
        run: mkdir -p reviews
      
      - name: Debug file structure
        run: |
          echo "Current directory structure:"
          find . -name "*.py" -o -name "*.sql" | head -20
          echo "Test directory contents:"
          ls -la test/ || echo "No test directory found"
          echo "Scripts directory contents:"
          ls -la scripts/ || echo "No scripts directory found"
      
      - name: Run code review analysis
        run: python scripts/cortex_python_review.py test reviews ${{ github.event.pull_request.number }} ${{ github.sha }}
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
          SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
      
      - name: Upload review outputs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: review-outputs
          path: reviews/
      
      - name: Post review comments
        run: python scripts/inline_comment.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_PR_NUMBER: ${{ github.event.pull_request.number }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_API_URL: ${{ github.api_url }}
        continue-on-error: true
